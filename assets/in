#!/bin/sh
# vim: set ft=sh

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source $(dirname $0)/common.sh

destination=$1

if [ -z "$destination" ]; then
  echo "usage: $0 <path/to/destination>" >&2
  exit 1
fi

# for jq
PATH=/usr/local/bin:$PATH

payload=$(mktemp /tmp/resource-in.XXXXXX)

cat > $payload <&0

insecure_registries=$(jq -r '.source.insecure_registries // [] | join(" ")' < $payload)

registry_mirror=$(jq -r '.source.registry_mirror // ""' < $payload)

start_docker "$insecure_registries" "$registry_mirror"

username=$(jq -r '.source.username // ""' < $payload)
password=$(jq -r '.source.password // ""' < $payload)
email=$(jq -r '.source.email // ""' < $payload)
repository="$(jq -r '.source.repository // ""' < $payload)"
tag="$(jq -r '.source.tag // "latest"' < $payload)"

if private_registry "${repository}" || ecr_registry "${repository}" ; then
  registry="$(extract_registry "${repository}")"
else
  registry=
fi

digest="$(jq -r '.version.digest' < $payload)"

rootfs="$(jq -r '.params.rootfs // false' < $payload)"
skip_download="$(jq -r '.params.skip_download // false' < $payload)"
save="$(jq -r '.params.save // false' < $payload)"

mkdir -p $destination

image_name="${repository}@${digest}"

if [ "$skip_download" = "false" ]; then
  if ecr_registry "${repository}" ; then
    aws_region="$(extract_aws_region "${registry}")"
    echo "Logging in Amazon ECR in ${aws_region}"
    eval $(docker run --rm \
      -e AWS_ACCESS_KEY_ID="${username}" \
      -e AWS_SECRET_ACCESS_KEY="${password}" \
      cgswong/aws:aws ecr --region "${aws_region}" get-login)
  elif [ -n "${username}" ] && [ -n "${password}" ] && [ -n "${email}" ]; then
    docker login -u "${username}" -p "${password}" -e "${email}" ${registry}
  fi

  docker_pull "$image_name"

  if [ "$save" = "true" ]; then
    docker save -o ${destination}/image "$image_name"
  fi

  docker run \
    --cidfile=/tmp/container.cid \
    -v /opt/resource/print-metadata:/tmp/print-metadata \
    --entrypoint /tmp/print-metadata  \
    "$image_name" > ${destination}/metadata.json

  mkdir -p ${destination}/rootfs/
  docker export $(cat /tmp/container.cid) | tar -xf - -C ${destination}/rootfs/

  if [ "$rootfs" = "true" ]; then
    docker export $(cat /tmp/container.cid) > ${destination}/rootfs.tar
  fi
fi

image_id="$(image_from_digest "$repository" "$digest")"

echo "$repository" > ${destination}/repository
echo "$tag" > ${destination}/tag
echo "$image_id" > ${destination}/image-id
echo "$digest" > ${destination}/digest

jq -n "{
  version: {
    digest: $(echo $digest | jq -R .)
  },
  metadata: [
    { name: \"image\", value: $(echo $image_id | head -c 12 | jq -R .) }
  ]
}" >&3
